X<-read.csv("CombinedData")
X<-read.csv("CombinedData.csv")
library(readr)
CombinedData <- read_csv("C:/Users/user/Desktop/CLASSES/FALL 2023/Bayesian Stats/CombinedData.csv")
View(CombinedData)
##### a func t i on to compute the marginal p r o b a b i l i t y
lpy .X<−func t i on (y ,X, g=l eng th ( y ) ,
X<-CombinedData
lpy .X<−func t i on (y ,X, g=l eng th ( y ) ,
##### a func t i on to compute the marginal p r o b a b i l i t y
lpy .X<−func t i on (y ,X, g=l eng th ( y ) ,
rm(list = ls())
library(readxl)
CombinedData <- read_excel("C:/Users/user/Desktop/CLASSES/FALL 2023/Bayesian Stats/CombinedData.csv")
getwd()
data<-read.csv("CombinedData,header=TRUE")
data<-read.csv("CombinedData.csv,header=TRUE")
data<-read.csv("CombinedData.csv",header=TRUE)
data
class(data)
y<-data$Pct.
X<-data%>%select(-c('Pct.'))
X<-data[,c(3:12)]
y<-data[,c(2)]
y
X
y<-(y-mean(y))/sd(y)
X <-t( (t(X)-apply(X,2,mean))/apply(X,2,sd))
rm(X)
rm(y)
y <- data(c[,2])
y <- data[c(,2))
y <- data[c(,2)]
y <- data[c(:,2)]
y<-c(data[,2])
y
X<-c(data[,3:12])
yf<-(y-mean(y))/sd(y)
Xf<-t( (t(Xf)-apply(Xf,2,mean))/apply(Xf,2,sd))
Xf<-t( (t(X)-apply(X,2,mean))/apply(X,2,sd))
dim(X)
dim(y)
dim(data)
rm(X)
X<-data[,[3,4,5,6,7,8,9,10,11,12]]
X<-data[[3,4,5,6,7,8,9,10,11,12]]
rm(X)
X<-data[,3:12]
dim(X)
dim(y)
rm(y)
y<-data[,2]
rm(yf)
dim(y)
yf<-(y-mean(y))/sd(y)
Xf<-t( (t(X)-apply(X,2,mean))/apply(X,2,sd))
n<-length(yf)
set.seed(1)
i.te<-sample(1:n,100)
i.tr<-(1:n)[-i.te]
y<-yf[i.tr] ; y.te<-yf[i.te]
X<-Xf[i.tr,]; X.te<-Xf[i.te,]
pdf("fig9_5.pdf",family="Times",height=1.75,width=5)
par(mfrow=c(1,3),mar=c(2.75,2.75,.5,.5),mgp=c(1.5,.5,0))
olsfit<-lm(y~-1+X)
View(X)
View(X)
View(X.te)
View(X.te)
View(X.te)
rm(X.te,Xf,i.te,i.tr,X)
rm(n,y,y.te,yf)
yf<-data[,2]
Xf<-data[,3:12]
yf<-(yf-mean(yf))/sd(yf)
Xf<-t( (t(Xf)-apply(Xf,2,mean))/apply(Xf,2,sd))
## set up training and test data
n<-length(yf)
set.seed(1)
i.te<-sample(1:n,100)
i.tr<-(1:n)[-i.te]
y<-yf[i.tr] ; y.te<-yf[i.te]
X<-Xf[i.tr,]; X.te<-Xf[i.te,]
#### Figure 9.5
pdf("fig9_5.pdf",family="Times",height=1.75,width=5)
par(mfrow=c(1,3),mar=c(2.75,2.75,.5,.5),mgp=c(1.5,.5,0))
olsfit<-lm(y~-1+X)
rm(X,X.te,Xf,i.te,i.tr,n)
rm(y,y.te,yf)
y<-data[,3]
X<-data[,3:12]
rm(y)
y<-data[,2]
apply(X,2,mean)
X
y
rm(X)
X<-c(data[,3:12])
X
apply(X,2,mean)
rm(X)
data$Team
data$(Team,Pct.)
X<-data.matrix(data[,3:12])
X
apply(X,2,mean)
apply(X,1,mean)
X
View(X)
View(X)
dim(y)
y
X %>% replace_na(0)
rm(X)
rm(y)
rm(data)
obs<-read.csv(Observations.csv,header=TRUE)
obs<-read.csv("Observations.csv",header=TRUE)
View(obs)
View(obs)
yf<-obs[,3]
Xf<-obs[,4:13]
yf<-(yf-mean(yf))/sd(yf)
Xf<-t( (t(Xf)-apply(Xf,2,mean))/apply(Xf,2,sd))
n<-length(yf)
set.seed(1)
i.te<-sample(1:n,100)
i.tr<-(1:n)[-i.te]
y<-yf[i.tr] ; y.te<-yf[i.te]
X<-Xf[i.tr,]; X.te<-Xf[i.te,]
pdf("fig9_5.pdf",family="Times",height=1.75,width=5)
par(mfrow=c(1,3),mar=c(2.75,2.75,.5,.5),mgp=c(1.5,.5,0))
olsfit<-lm(y~-1+X)
y.te.ols<-X.te%*%olsfit$coef
plot(y.te,y.te.ols,xlab=expression(italic(y)[test]),
ylab=expression(hat(italic(y))[test])) ; abline(0,1)
mean( (y.te-y.te.ols )^2 )
plot(olsfit$coef,type="h",lwd=2,xlab="regressor index",ylab=expression(hat(beta)[ols]))
source("backselect.R")
View(olsfit)
View(olsfit)
View(X)
View(X)
View(obs)
View(X)
View(olsfit)
View(olsfit)
View(obs)
View(obs)
View(olsfit)
View(olsfit)
View(obs)
cor(obs[,4:ncol(obs)])
#### Bayesian model selection
p<-dim(X)[2]
S<-10000
source("regression_gprior.R")
## Don't run it again if you've already run it
runmcmc<-!any(system("ls",intern=TRUE)=="diabetesBMA.RData")
#### Bayesian model selection
p<-dim(X)[2]
S<-10000
source("regression_gprior.R")
BETA<-Z<-matrix(NA,S,p)
z<-rep(1,dim(X)[2] )
lpy.c<-lpy.X(y,X[,z==1,drop=FALSE])
for(s in 1:S)
{
for(j in sample(1:p))
{
zp<-z ; zp[j]<-1-zp[j]
lpy.p<-lpy.X(y,X[,zp==1,drop=FALSE])
r<- (lpy.p - lpy.c)*(-1)^(zp[j]==0)
z[j]<-rbinom(1,1,1/(1+exp(-r)))
if(z[j]==zp[j]) {lpy.c<-lpy.p}
}
beta<-z
if(sum(z)>0){beta[z==1]<-lm.gprior(y,X[,z==1,drop=FALSE],S=1)$beta }
Z[s,]<-z
BETA[s,]<-beta
if(s%%10==0)
{
bpm<-apply(BETA[1:s,],2,mean) ; plot(bpm)
cat(s,mean(z), mean( (y.te-X.te%*%bpm)^2),"\n")
Zcp<- apply(Z[1:s,,drop=FALSE],2,cumsum)/(1:s)
plot(c(1,s),range(Zcp),type="n") ; apply(Zcp,2,lines)
}
}
View(BETA)
View(Z)
View(Z)
#### Figure 9.7
pdf("fig9_7.pdf",family="Times",height=1.75,width=5)
par(mar=c(2.75,2.75,.5,.5),mgp=c(1.7,.7,0))
beta.bma<-apply(BETA,2,mean,na.rm=TRUE)
y.te.bma<-X.te%*%beta.bma
mean( (y.te-y.te.bma)^2)
layout( matrix(c(1,1,2),nrow=1,ncol=3) )
plot(apply(Z,2,mean,na.rm=TRUE),xlab="regressor index",ylab=expression(
paste( "Pr(",italic(z[j] == 1),"|",italic(y),",X)",sep="")),type="h",lwd=2)
plot(y.te,y.te.bma,xlab=expression(italic(y)[test]),
ylab=expression(hat(italic(y))[test])) ; abline(0,1)
dev.off()
beta.bma
View(obs)
View(obs)
View(Z)
View(BETA)
View(BETA)
betta_prime = BETA[2000:1000,]
rm(betta_prime)
beta_prime<-BETA[2000:10000,]
beta_pmean<-apply(beta_prime,2,mean,na.rm=TRUE)
beta_pmean
View(olsfit)
## MCMC Diagnostics Autocorrelation between  models
library(coda)
effectiveSize(Z)
CODA?
pairs(obs)
View(obs)
View(obs)
pair(obs[3:13,])
pairs(obs[3:13,])
obs[3:13,]
pairs(obs[,3:13])
View(olsfit)
View(olsfit)
pdf("fig9_51.pdf",family="Times",height=1.75,width=5)
par(mfrow=c(1,3),mar=c(2.75,2.75,.5,.5),mgp=c(1.5,.5,0))
olsfit<-lm(y~-1+X)
y.te.ols<-X.te%*%olsfit$coef
plot(y.te,y.te.ols,xlab=expression(italic(y)[test]),
ylab=expression(hat(italic(y))[test])) ; abline(0,1)
mean( (y.te-y.te.ols )^2 )
plot(olsfit$coef,type="h",lwd=2,xlab="regressor index",ylab=expression(hat(beta)[ols]))
## backwards selection
source("backselect.R")
ols.srr<-mean( (y.te-y.te.ols )^2 )
bayes.srr<-mean((y.te-X.te%*%beta_pmean))
bayes.srr<-mean((y.te-X.te%*%beta_pmean)^2)
mean((y.te-X.te%*%beta.bma)^2)
dev.off()
effsize<-effectiveSize(Z)
## MCMC Diagnostics Autocorrelation between  models
library(coda)
effsize<-effectiveSize(Z)
effsize
View(Zcp)
View(Zcp)
mean((y.te-X.te%*%beta_pmean))
mean((y.te-X.te%*%beta_pmean)^2)
View(olsfit)
View(beta_prime)
beta_pmean
## backwards selection
source("backselect.R")
vars<-bselect.tcrit(y,X,tcrit=1.65)
## backwards selection
source("backselect.R")
vars<-bselect.tcrit(y,X,tcrit=1.65)
bslfit<-lm(y~-1+X[,vars$remain])
y.te.bsl<-X.te[,vars$remain]%*%bslfit$coef
mean( (y.te-y.te.bsl)^2)
plot(y.te,y.te.bsl,ylim=range( c(y.te.bsl,y.te.ols)),
xlab=expression(italic(y)[test]),ylab=expression(hat(italic(y))[test]))
abline(0,1)
dev.off()
View(bslfit)
